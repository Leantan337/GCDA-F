# Generated by Django 4.2.20 on 2025-04-16 00:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0094_alter_page_locale'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Subscriber email address', max_length=254, unique=True)),
                ('name', models.CharField(blank=True, help_text='Subscriber name', max_length=100)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the subscription is currently active')),
                ('preferences', models.JSONField(blank=True, help_text='Subscriber preferences in JSON format', null=True)),
            ],
            options={
                'verbose_name': 'Newsletter Subscription',
                'verbose_name_plural': 'Newsletter Subscriptions',
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='EngagementEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('view', 'Page View'), ('like', 'Like'), ('share', 'Share'), ('download', 'Download'), ('subscribe', 'Newsletter Subscribe')], help_text='Type of engagement action', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the engagement occurred')),
                ('metadata', models.JSONField(blank=True, help_text='Additional event data in JSON format', null=True)),
                ('page', models.ForeignKey(help_text='Page where the engagement occurred', on_delete=django.db.models.deletion.CASCADE, related_name='engagement_events', to='wagtailcore.page')),
                ('user', models.ForeignKey(help_text='User who performed the action', on_delete=django.db.models.deletion.CASCADE, related_name='engagement_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Engagement Event',
                'verbose_name_plural': 'Engagement Events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp'], name='engagement__timesta_75b56f_idx'), models.Index(fields=['event_type'], name='engagement__event_t_a934a6_idx')],
            },
        ),
    ]
